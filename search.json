[
  {
    "objectID": "Preliminary analyses.html",
    "href": "Preliminary analyses.html",
    "title": "Preliminary analyses for considering the Right to Health in the Universal Periodic Review",
    "section": "",
    "text": "Code\npacman::p_load(\n  here,\n  tidyverse,\n  janitor,\n  DT\n)\n\n# Load or install packages from GitHub:\npacman::p_load_gh(\n  \"DrMattG/SDGsR\", # Uses API to get SDGs data\n  \"aphp/rgho\" # Uses API to get data from Global Health Observatory\n)\n\n\nRead in the UPR data from the SDG data from the “Human Rights Data Explorer” (created and maintained by the Danish Institute for Human Rights): https://sdgdata.humanrights.dk/en/mechanisms/upr/cycle-4 (Navigate to the link above and click “download all data” - the download preparation takes &gt;30 minutes)\nI then converted the CSV file to RDS format to save space:\n\n\nCode\n# Download from https://sdgdata.humanrights.dk/en/solr-explorer\nsdg_data &lt;- readRDS(here(\"data\",\"sdg_data.rds\")) |&gt; \n  janitor::clean_names() |&gt; \n  mutate_if(is.character, ~na_if(., \"\")) |&gt; # convert blank spaces to true NA\n  filter(mechanism == \"Universal Periodic Review\") |&gt; \n  rename(state_under_review = state) |&gt; \n  mutate(\n    year = ymd(paste0(year, \"01-01\")),\n    cycle = factor(cycle),\n    sdg_linked = factor(case_when(sdg_goals == \"No SDG link identified\" ~ \"No SDG link\",\n                                  .default = \"Linked to an SDG\"), \n                        levels = c(\"No SDG link\", \"Linked to an SDG\")),\n    response_upr = factor(response_upr),\n    title = str_split_i(paragraph, \"\\\\|\", 2)\n  ) |&gt; \n  relocate(sdg_linked, .after = sdg_goals)\n\n# Alternatively download straight from OHCHR website\n# https://uhri.ohchr.org/en/our-data-api \n# OHCHR &lt;- jsonlite::read_json(here(\"data\", \"export-full-en.json\"))\n# OHCHR &lt;- tidyjson::read_json(here(\"data\", \"export-full-en.json\"))\n\n\n\n\nI then created a set of keywords to assign recommendations as being related to the “right to health”. This is a key step to refine in case we opt for an automated process. Some of the keywords are partial words because I use a partial word matching (e.g. “prophyla” will match with both “prophylaxis” as well as “prophylactics”). Need to be careful to not accidentally include irrelevent terms.\n\n\nCode\n# Define keywords to use to identify recommendations related to the right to health\nhealth_keywords &lt;- \"health|well-being|wellbeing|sanitation|sanitary|safe water|clean water|right to water|disease|sick|infectio|nutrition|TB|tuberculosis|malaria|HIV|hospital|clinic|vaccin|immunisation|immunization|virus|viral|medic|doctor|nurse|nursing|maternal|contracep|abortion|reproductive|pregnan|prenatal|postnatal|neonatal|breasfe|obstetric|fertility|medic|diabetes|cancer|blood|hypertension|respiratory|prophyla|violence against women|violence against children|domestic violence|gender-based violence|sexual violence|marital violence|gender violence|virginity|hunger|malnutrition|obesity|sexual abuse|mortality|leprosy|famine|drought|food|hygiene|tobacco|smoking|child marriage|forced marriage|infanticide|mutilation|honor crime|honor killing|honour crime|honour killing|breast ironing|harmful practices|harmful traditional practices|disaster|disabled|disabili\"\n\n# Define combinations of keywords for the right to health\nkeywords_comb1a &lt;- \"child|girl|women|sexual|domestic|gender|marital|lgbt\"\nkeywords_comb1b &lt;- \"abuse|maltreatment|violence|sexual|same-sex\"\n\nkeywords_comb2a &lt;- \"forced\"\nkeywords_comb2b &lt;- \"marriage\"\n\nkeywords_comb3a &lt;- \"sex|gender|civil identity|transgender\"\nkeywords_comb3b &lt;- \"surgery|sterili\"\n\n\n\n\n\n\n\nCode\nsdg_data &lt;- sdg_data |&gt; \n  mutate(\n    health_related = factor(case_when(\n      str_detect(tolower(text), health_keywords)| \n        str_detect(tolower(sdg_goals), \"health|sanitation\")\n      # str_detect(targets, \"5.6|16.1|16.2\")\n      ~ \"Health-related\",\n      # Combo 1\n      str_detect(tolower(text), keywords_comb1a)&\n        str_detect(tolower(text), keywords_comb1b)~ \"Health-related\",\n      # Combo 2\n      str_detect(tolower(text), keywords_comb2a)&\n        str_detect(tolower(text), keywords_comb2b)~ \"Health-related\",\n      # Combo 3\n      str_detect(tolower(text), keywords_comb3a)&\n        str_detect(tolower(text), keywords_comb3b)~ \"Health-related\",\n      \n      .default = \"Not health-related\"\n    ), levels = c(\"Not health-related\", \"Health-related\"))\n  ) |&gt; \n  relocate(health_related, .after = text)\n\n\n\n\n\n\n\n\n\nCode\nsdg_data |&gt; \n  group_by(cycle) |&gt; \n  count(health_related) |&gt; \n  mutate(perc = n/sum(n)*100,\n         n_tot = sum(n)) |&gt; \n  ggplot(aes(x = cycle, y = n, fill = health_related))+\n  geom_col()+\n  labs(y = \"Number of recommendations\", x = \"UPR Cycle\", \n       title = \"UPR recommendations related to the right to health, per cycle\",\n       fill = \"\")+\n  geom_text(aes(label = paste0(\"(\",round(perc,1), \"%)\"), y = n/2), vjust = 0.5)+\n  geom_text(aes(label = format(n_tot, big.mark = \",\"), y = n_tot, vjust =-0.2))+\n  # geom_text(aes(label = paste0(\"n = \", format(n, big.mark = \",\"))))+\n  # geom_text(aes(label = paste0(\"n = \", scales::label_comma(n))), position = position_stack(), vjust = 1)+\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nsdg_data |&gt; \n  group_by(cycle, health_related) |&gt; \n  count(sdg_linked) |&gt; \n  mutate(perc = n/sum(n)*100) |&gt; \n  ggplot(aes(x = cycle, y = n, fill = sdg_linked, label = paste0(round(perc,1), \"%\")))+\n  facet_grid(~ health_related, \n             scales = \"free_x\", \n             space = \"free_x\", \n             switch = \"x\"\n  )+\n  geom_col()+\n  labs(x = \"Number of recommendations\", x = \"Cycle\", fill = \"\",\n       title = \"UPR recommendations that have been linked to an SDG target\")+\n  geom_text(position = position_stack(), vjust = 1)+\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nsdg_data |&gt; \n  filter(!is.na(response_upr)) |&gt; \n  group_by(cycle, health_related) |&gt; \n  count(response_upr) |&gt; \n  mutate(perc = n/sum(n)*100) |&gt; \n  ggplot(aes(x = cycle, y = n, fill = response_upr, label = paste0(round(perc,1), \"%\")))+\n  facet_grid(~ health_related, \n             scales = \"free_x\", \n             space = \"free_x\", \n             switch = \"x\"\n  )+\n  geom_col()+\n  labs(x = \"Number of recommendations\", x = \"Cycle\", fill = \"\",\n       title = \"State responses to UPR recommendations\")+\n  geom_text(position = position_stack(), vjust = -0.5)+\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nsdg_data |&gt; \n  filter(!is.na(response_upr)) |&gt; \n  group_by(cycle, sdg_linked) |&gt; \n  count(response_upr) |&gt; \n  mutate(perc = n/sum(n)*100) |&gt; \n  ggplot(aes(x = cycle, y = n, fill = response_upr, label = paste0(round(perc,1), \"%\")))+\n  facet_grid(~ sdg_linked, \n             scales = \"free_x\", \n             space = \"free_x\", \n             switch = \"x\"\n  )+\n  geom_col()+\n  labs(x = \"Number of recommendations\", x = \"Cycle\", fill = \"\",\n       title = \"State responses to UPR recommendations\")+\n  geom_text(position = position_stack(), vjust = -0.5)+\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nsdg_data |&gt; \n  filter(!is.na(response_upr)) |&gt; \n  group_by(cycle) |&gt; \n  count(response_upr) |&gt; \n  mutate(perc = n/sum(n)*100) |&gt; \n  ggplot(aes(x = cycle, y = n, fill = response_upr, label = paste0(round(perc,1), \"%\")))+\n  geom_col(position = \"dodge\")+\n  labs(y = \"Number of recommendations\", x = \"UPR Cycle\", \n       title = \"State responses to UPR recommendations\",\n       fill = \"\")+\n  geom_text(position = position_dodge(width = 0.9), vjust = -0.5)+\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\nI’ve split the recommendations into two groups here, one where they’ve been linked to the right to health and one where the link has not been made. These can be explored and inspected, for example by adding in keywords into the filters, so that we can make sure that we aren’t missing or inappropriately including recommendations within our definitions for the “right to health”.\n\n\nCode\n/* set the DT table fontsizes */\nth { font-size: 11px; } /* header font */\ntd { font-size: 11px; } /* cell font */\n\n\n\n\nLinked to right to healthNot linked to right to health\n\n\n\nFull dataRandom sample\n\n\n\n\nCode\nyes_health &lt;- sdg_data |&gt; \n  mutate(state_under_review = factor(state_under_review)) |&gt; \n  filter(health_related == \"Health-related\") |&gt; \n  select(text, sdg_goals,\n         # groups, \n         state_under_review, response_upr, cycle, document_code, paragraph)\n\nyes_health |&gt; \n  DT::datatable(\n    filter = \"top\",\n    options = list(\n      pageLength = 100,\n      deferRender = TRUE,\n      scrollY = 400,\n      scrollX = TRUE,\n      scroller = TRUE,\n      autoWidth = TRUE,      \n      columnDefs = list(list(width = '500px', targets = c(0)),\n                        list(width = '200px', targets = c(1)))\n    ),\n    rownames = FALSE, # set to FALSE for cleaner look\n    class = 'cell-border stripe hover compact'\n  )\n\n\n\n\n\n\n\n\n\n\nCode\nyes_health |&gt; slice_sample(n = 500) |&gt; \n  DT::datatable(\n    filter = \"top\",\n    options = list(\n      pageLength = 100,\n      deferRender = TRUE,\n      scrollY = 800,\n      scrollX = TRUE,\n      scroller = TRUE,\n      autoWidth = TRUE,      \n      columnDefs = list(list(width = '500px', targets = c(0)),\n                        list(width = '200px', targets = c(1)))\n    ),\n    rownames = FALSE, # set to FALSE for cleaner look\n    class = 'cell-border stripe hover compact'\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nFull dataRandom sample\n\n\n\n\nCode\nnot_health &lt;- sdg_data |&gt; \n  mutate(state_under_review = factor(state_under_review)) |&gt; \n  filter(health_related == \"Not health-related\") |&gt; \n  select(text, sdg_goals, \n         # groups, \n         state_under_review, response_upr, cycle, document_code, paragraph)\n\nnot_health |&gt; \n  DT::datatable(\n    filter = \"top\",\n    options = list(\n      pageLength = 100,\n      deferRender = TRUE,\n      scrollY = 400,\n      scrollX = TRUE,\n      scroller = TRUE,\n      autoWidth = TRUE,      \n      columnDefs = list(list(width = '500px', targets = c(0)),\n                        list(width = '200px', targets = c(1)))\n    ),\n    rownames = FALSE, # set to FALSE for cleaner look\n    class = 'cell-border stripe hover compact'\n  )\n\n\n\n\n\n\n\n\n\n\nCode\nnot_health |&gt; slice_sample(n = 500) |&gt; \n  DT::datatable(\n    filter = \"top\",\n    options = list(\n      pageLength = 100,\n      deferRender = TRUE,\n      scrollY = 800,\n      scrollX = TRUE,\n      scroller = TRUE,\n      autoWidth = TRUE,      \n      columnDefs = list(list(width = '500px', targets = c(0)),\n                        list(width = '200px', targets = c(1)))\n    ),\n    rownames = FALSE, # set to FALSE for cleaner look\n    class = 'cell-border stripe hover compact'\n  )"
  },
  {
    "objectID": "Preliminary analyses.html#setup",
    "href": "Preliminary analyses.html#setup",
    "title": "Preliminary analyses for considering the Right to Health in the Universal Periodic Review",
    "section": "",
    "text": "Code\npacman::p_load(\n  here,\n  tidyverse,\n  janitor,\n  DT\n)\n\n# Load or install packages from GitHub:\npacman::p_load_gh(\n  \"DrMattG/SDGsR\", # Uses API to get SDGs data\n  \"aphp/rgho\" # Uses API to get data from Global Health Observatory\n)\n\n\nRead in the UPR data from the SDG data from the “Human Rights Data Explorer” (created and maintained by the Danish Institute for Human Rights): https://sdgdata.humanrights.dk/en/mechanisms/upr/cycle-4 (Navigate to the link above and click “download all data” - the download preparation takes &gt;30 minutes)\nI then converted the CSV file to RDS format to save space:\n\n\nCode\n# Download from https://sdgdata.humanrights.dk/en/solr-explorer\nsdg_data &lt;- readRDS(here(\"data\",\"sdg_data.rds\")) |&gt; \n  janitor::clean_names() |&gt; \n  mutate_if(is.character, ~na_if(., \"\")) |&gt; # convert blank spaces to true NA\n  filter(mechanism == \"Universal Periodic Review\") |&gt; \n  rename(state_under_review = state) |&gt; \n  mutate(\n    year = ymd(paste0(year, \"01-01\")),\n    cycle = factor(cycle),\n    sdg_linked = factor(case_when(sdg_goals == \"No SDG link identified\" ~ \"No SDG link\",\n                                  .default = \"Linked to an SDG\"), \n                        levels = c(\"No SDG link\", \"Linked to an SDG\")),\n    response_upr = factor(response_upr),\n    title = str_split_i(paragraph, \"\\\\|\", 2)\n  ) |&gt; \n  relocate(sdg_linked, .after = sdg_goals)\n\n# Alternatively download straight from OHCHR website\n# https://uhri.ohchr.org/en/our-data-api \n# OHCHR &lt;- jsonlite::read_json(here(\"data\", \"export-full-en.json\"))\n# OHCHR &lt;- tidyjson::read_json(here(\"data\", \"export-full-en.json\"))\n\n\n\n\nI then created a set of keywords to assign recommendations as being related to the “right to health”. This is a key step to refine in case we opt for an automated process. Some of the keywords are partial words because I use a partial word matching (e.g. “prophyla” will match with both “prophylaxis” as well as “prophylactics”). Need to be careful to not accidentally include irrelevent terms.\n\n\nCode\n# Define keywords to use to identify recommendations related to the right to health\nhealth_keywords &lt;- \"health|well-being|wellbeing|sanitation|sanitary|safe water|clean water|right to water|disease|sick|infectio|nutrition|TB|tuberculosis|malaria|HIV|hospital|clinic|vaccin|immunisation|immunization|virus|viral|medic|doctor|nurse|nursing|maternal|contracep|abortion|reproductive|pregnan|prenatal|postnatal|neonatal|breasfe|obstetric|fertility|medic|diabetes|cancer|blood|hypertension|respiratory|prophyla|violence against women|violence against children|domestic violence|gender-based violence|sexual violence|marital violence|gender violence|virginity|hunger|malnutrition|obesity|sexual abuse|mortality|leprosy|famine|drought|food|hygiene|tobacco|smoking|child marriage|forced marriage|infanticide|mutilation|honor crime|honor killing|honour crime|honour killing|breast ironing|harmful practices|harmful traditional practices|disaster|disabled|disabili\"\n\n# Define combinations of keywords for the right to health\nkeywords_comb1a &lt;- \"child|girl|women|sexual|domestic|gender|marital|lgbt\"\nkeywords_comb1b &lt;- \"abuse|maltreatment|violence|sexual|same-sex\"\n\nkeywords_comb2a &lt;- \"forced\"\nkeywords_comb2b &lt;- \"marriage\"\n\nkeywords_comb3a &lt;- \"sex|gender|civil identity|transgender\"\nkeywords_comb3b &lt;- \"surgery|sterili\"\n\n\n\n\n\n\n\nCode\nsdg_data &lt;- sdg_data |&gt; \n  mutate(\n    health_related = factor(case_when(\n      str_detect(tolower(text), health_keywords)| \n        str_detect(tolower(sdg_goals), \"health|sanitation\")\n      # str_detect(targets, \"5.6|16.1|16.2\")\n      ~ \"Health-related\",\n      # Combo 1\n      str_detect(tolower(text), keywords_comb1a)&\n        str_detect(tolower(text), keywords_comb1b)~ \"Health-related\",\n      # Combo 2\n      str_detect(tolower(text), keywords_comb2a)&\n        str_detect(tolower(text), keywords_comb2b)~ \"Health-related\",\n      # Combo 3\n      str_detect(tolower(text), keywords_comb3a)&\n        str_detect(tolower(text), keywords_comb3b)~ \"Health-related\",\n      \n      .default = \"Not health-related\"\n    ), levels = c(\"Not health-related\", \"Health-related\"))\n  ) |&gt; \n  relocate(health_related, .after = text)\n\n\n\n\n\n\n\n\n\nCode\nsdg_data |&gt; \n  group_by(cycle) |&gt; \n  count(health_related) |&gt; \n  mutate(perc = n/sum(n)*100,\n         n_tot = sum(n)) |&gt; \n  ggplot(aes(x = cycle, y = n, fill = health_related))+\n  geom_col()+\n  labs(y = \"Number of recommendations\", x = \"UPR Cycle\", \n       title = \"UPR recommendations related to the right to health, per cycle\",\n       fill = \"\")+\n  geom_text(aes(label = paste0(\"(\",round(perc,1), \"%)\"), y = n/2), vjust = 0.5)+\n  geom_text(aes(label = format(n_tot, big.mark = \",\"), y = n_tot, vjust =-0.2))+\n  # geom_text(aes(label = paste0(\"n = \", format(n, big.mark = \",\"))))+\n  # geom_text(aes(label = paste0(\"n = \", scales::label_comma(n))), position = position_stack(), vjust = 1)+\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nsdg_data |&gt; \n  group_by(cycle, health_related) |&gt; \n  count(sdg_linked) |&gt; \n  mutate(perc = n/sum(n)*100) |&gt; \n  ggplot(aes(x = cycle, y = n, fill = sdg_linked, label = paste0(round(perc,1), \"%\")))+\n  facet_grid(~ health_related, \n             scales = \"free_x\", \n             space = \"free_x\", \n             switch = \"x\"\n  )+\n  geom_col()+\n  labs(x = \"Number of recommendations\", x = \"Cycle\", fill = \"\",\n       title = \"UPR recommendations that have been linked to an SDG target\")+\n  geom_text(position = position_stack(), vjust = 1)+\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nsdg_data |&gt; \n  filter(!is.na(response_upr)) |&gt; \n  group_by(cycle, health_related) |&gt; \n  count(response_upr) |&gt; \n  mutate(perc = n/sum(n)*100) |&gt; \n  ggplot(aes(x = cycle, y = n, fill = response_upr, label = paste0(round(perc,1), \"%\")))+\n  facet_grid(~ health_related, \n             scales = \"free_x\", \n             space = \"free_x\", \n             switch = \"x\"\n  )+\n  geom_col()+\n  labs(x = \"Number of recommendations\", x = \"Cycle\", fill = \"\",\n       title = \"State responses to UPR recommendations\")+\n  geom_text(position = position_stack(), vjust = -0.5)+\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nsdg_data |&gt; \n  filter(!is.na(response_upr)) |&gt; \n  group_by(cycle, sdg_linked) |&gt; \n  count(response_upr) |&gt; \n  mutate(perc = n/sum(n)*100) |&gt; \n  ggplot(aes(x = cycle, y = n, fill = response_upr, label = paste0(round(perc,1), \"%\")))+\n  facet_grid(~ sdg_linked, \n             scales = \"free_x\", \n             space = \"free_x\", \n             switch = \"x\"\n  )+\n  geom_col()+\n  labs(x = \"Number of recommendations\", x = \"Cycle\", fill = \"\",\n       title = \"State responses to UPR recommendations\")+\n  geom_text(position = position_stack(), vjust = -0.5)+\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nsdg_data |&gt; \n  filter(!is.na(response_upr)) |&gt; \n  group_by(cycle) |&gt; \n  count(response_upr) |&gt; \n  mutate(perc = n/sum(n)*100) |&gt; \n  ggplot(aes(x = cycle, y = n, fill = response_upr, label = paste0(round(perc,1), \"%\")))+\n  geom_col(position = \"dodge\")+\n  labs(y = \"Number of recommendations\", x = \"UPR Cycle\", \n       title = \"State responses to UPR recommendations\",\n       fill = \"\")+\n  geom_text(position = position_dodge(width = 0.9), vjust = -0.5)+\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\nI’ve split the recommendations into two groups here, one where they’ve been linked to the right to health and one where the link has not been made. These can be explored and inspected, for example by adding in keywords into the filters, so that we can make sure that we aren’t missing or inappropriately including recommendations within our definitions for the “right to health”.\n\n\nCode\n/* set the DT table fontsizes */\nth { font-size: 11px; } /* header font */\ntd { font-size: 11px; } /* cell font */\n\n\n\n\nLinked to right to healthNot linked to right to health\n\n\n\nFull dataRandom sample\n\n\n\n\nCode\nyes_health &lt;- sdg_data |&gt; \n  mutate(state_under_review = factor(state_under_review)) |&gt; \n  filter(health_related == \"Health-related\") |&gt; \n  select(text, sdg_goals,\n         # groups, \n         state_under_review, response_upr, cycle, document_code, paragraph)\n\nyes_health |&gt; \n  DT::datatable(\n    filter = \"top\",\n    options = list(\n      pageLength = 100,\n      deferRender = TRUE,\n      scrollY = 400,\n      scrollX = TRUE,\n      scroller = TRUE,\n      autoWidth = TRUE,      \n      columnDefs = list(list(width = '500px', targets = c(0)),\n                        list(width = '200px', targets = c(1)))\n    ),\n    rownames = FALSE, # set to FALSE for cleaner look\n    class = 'cell-border stripe hover compact'\n  )\n\n\n\n\n\n\n\n\n\n\nCode\nyes_health |&gt; slice_sample(n = 500) |&gt; \n  DT::datatable(\n    filter = \"top\",\n    options = list(\n      pageLength = 100,\n      deferRender = TRUE,\n      scrollY = 800,\n      scrollX = TRUE,\n      scroller = TRUE,\n      autoWidth = TRUE,      \n      columnDefs = list(list(width = '500px', targets = c(0)),\n                        list(width = '200px', targets = c(1)))\n    ),\n    rownames = FALSE, # set to FALSE for cleaner look\n    class = 'cell-border stripe hover compact'\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nFull dataRandom sample\n\n\n\n\nCode\nnot_health &lt;- sdg_data |&gt; \n  mutate(state_under_review = factor(state_under_review)) |&gt; \n  filter(health_related == \"Not health-related\") |&gt; \n  select(text, sdg_goals, \n         # groups, \n         state_under_review, response_upr, cycle, document_code, paragraph)\n\nnot_health |&gt; \n  DT::datatable(\n    filter = \"top\",\n    options = list(\n      pageLength = 100,\n      deferRender = TRUE,\n      scrollY = 400,\n      scrollX = TRUE,\n      scroller = TRUE,\n      autoWidth = TRUE,      \n      columnDefs = list(list(width = '500px', targets = c(0)),\n                        list(width = '200px', targets = c(1)))\n    ),\n    rownames = FALSE, # set to FALSE for cleaner look\n    class = 'cell-border stripe hover compact'\n  )\n\n\n\n\n\n\n\n\n\n\nCode\nnot_health |&gt; slice_sample(n = 500) |&gt; \n  DT::datatable(\n    filter = \"top\",\n    options = list(\n      pageLength = 100,\n      deferRender = TRUE,\n      scrollY = 800,\n      scrollX = TRUE,\n      scroller = TRUE,\n      autoWidth = TRUE,      \n      columnDefs = list(list(width = '500px', targets = c(0)),\n                        list(width = '200px', targets = c(1)))\n    ),\n    rownames = FALSE, # set to FALSE for cleaner look\n    class = 'cell-border stripe hover compact'\n  )"
  },
  {
    "objectID": "Preliminary analyses.html#focus-on-cycle-3",
    "href": "Preliminary analyses.html#focus-on-cycle-3",
    "title": "Preliminary analyses for considering the Right to Health in the Universal Periodic Review",
    "section": "Focus on Cycle 3",
    "text": "Focus on Cycle 3\n\nLoad in dataset from UPR Info\nI downloaded the UPR Info dataset on 2025-06-03 as several individual files (the download size was limited to 10,000 recommendations per download) and then combined them into one main file.\n(Still to be worked on)\n\n\nCode\n# upr_info &lt;- readRDS(here(\"data\", \"UPRInfo_all.rds\")) |&gt; \n#   janitor::clean_names() |&gt;\n#   mutate(\n#     state_under_review = str_split_i(related_document, \" - \", 1),\n#     cycle = factor(str_split_i(cycle, \" \\\\(\", 1))\n#   )\n\n# upr_info_cycle_3 &lt;- upr_info |&gt; \n#   filter(cycle == \"Cycle 3\") |&gt; droplevels() |&gt; \n#   select(title,cycle, state_under_review, recommendation, action_category, issues) |&gt; \n#   left_join(\n#     sdg_data |&gt; filter(cycle == \"Cycle 3\") |&gt; droplevels(), \n#     join_by(state_under_review, title)\n#     )"
  },
  {
    "objectID": "Preliminary analyses.html#link-to-indicators-from-gho",
    "href": "Preliminary analyses.html#link-to-indicators-from-gho",
    "title": "Preliminary analyses for considering the Right to Health in the Universal Periodic Review",
    "section": "Link to Indicators from GHO",
    "text": "Link to Indicators from GHO\nMake API calls to the GHO database to download the data related to the UHC indicators and to the indicator for maternal mortality ratio\n\n\nCode\n## Metadata ####\ngho_codes &lt;- get_gho_values(dimension = \"GHO\") |&gt; \n  rename(IndicatorCode=Code, indicator_fullname = Title)\ncountry_codes &lt;- get_gho_values(dimension = \"COUNTRY\") |&gt; \n  rename(COUNTRY = Code, country_name = Title)\nregion_codes &lt;- get_gho_values(dimension = \"REGION\") |&gt; \n  rename(REGION = Code, region_name = Title)\n\n# Get the UHC data\nUHC_AVAILABILITY_SCORE &lt;- get_gho_data(code = \"UHC_AVAILABILITY_SCORE\")\nUHC_INDEX_REPORTED &lt;- get_gho_data(code = \"UHC_INDEX_REPORTED\")\nUHC_SCI_CAPACITY &lt;- get_gho_data(code = \"UHC_SCI_CAPACITY\")\nUHC_SCI_INFECT &lt;- get_gho_data(code = \"UHC_SCI_INFECT\")\nUHC_SCI_NCD &lt;- get_gho_data(code = \"UHC_SCI_NCD\")\nUHC_SCI_RMNCH &lt;- get_gho_data(code = \"UHC_SCI_RMNCH\")\n\n# Combine the datasets and tag indicator and country full names\nUHC_all &lt;- bind_rows(UHC_AVAILABILITY_SCORE, UHC_INDEX_REPORTED, \n                     UHC_SCI_CAPACITY, UHC_SCI_INFECT,\n                     UHC_SCI_NCD, UHC_SCI_RMNCH) |&gt; \n  left_join(country_codes) |&gt; \n  left_join(gho_codes) |&gt; \n  left_join(region_codes) |&gt; \n  mutate(\n    NumericValue = as.numeric(NumericValue),\n    year = ymd(paste0(YEAR, \"-01-01\")),\n    region_name = case_when(GLOBAL == \"GLOBAL\" ~ \"Global\", \n                            .default = region_name)\n  )\n\n# Maternal mortality ratio\nMMR &lt;- get_gho_data(code = \"MDG_0000000026\") |&gt; \n  left_join(country_codes) |&gt; \n  left_join(gho_codes) |&gt; \n  left_join(region_codes) |&gt; \n  mutate(\n    NumericValue = as.numeric(NumericValue),\n    year = ymd(paste0(YEAR, \"-01-01\")),\n    region_name = case_when(GLOBAL == \"GLOBAL\" ~ \"Global\", \n                            .default = region_name)\n  )\n\n\n\nPlots\n\nUHC Indicators\n\n\nCode\n# Plot\nUHC_all |&gt; \n  filter(!IndicatorCode %in% c(\"UHC_AVAILABILITY_SCORE\",\n                               \"UHC_INDEX_REPORTED\")) |&gt; \n  filter(country_name %in% c(\"India\", \"Namibia\", \"Rwanda\", \"Sierra Leone\", \n                             \"Sudan\", \"Argentina\")) |&gt; \n  mutate(indicator_fullname = str_to_sentence(\n    str_remove(indicator_fullname, \"UHC Service Coverage sub-index on \")\n  )) |&gt; \n  ggplot(aes(x=year, y = NumericValue, color = indicator_fullname, shape = indicator_fullname))+\n  geom_point()+\n  geom_line()+\n  labs(y = \"Index value\",\n       x = \"Year\",\n       title = \"UHC Service Coverage Sub-Indexes\", color = \"\", shape = \"\")+\n  facet_wrap(.~country_name)+\n  theme_bw()+\n  theme(legend.position = \"bottom\")+\n  guides(color=guide_legend(nrow=2,byrow=TRUE))\n\n\n\n\n\n\n\n\n\n\n\nMaternal mortality ratio\n\n\nCode\n# Plot\nMMR |&gt; \n  filter(country_name %in% c(\n    \"India\", \"Namibia\", \"Rwanda\", \"Sierra Leone\",\n    \"Sudan\",\n    \"Argentina\")) |&gt; \n  filter(year &gt; ymd(\"1994-01-01\")) |&gt; \n  ggplot(aes(x=year, y = NumericValue))+\n  geom_line(color = \"tomato\", size = 1)+\n  labs(y = \"Index value\",\n       x = \"Year\",\n       title = \"Maternal mortality ratio (per 100,000 live births)\")+\n  facet_wrap(.~country_name, scales = \"free\")+\n  theme_bw()+\n  theme(legend.position = \"bottom\")+\n  guides(color=guide_legend(nrow=2,byrow=TRUE))\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nCode\n# Plot\nMMR |&gt; \n  filter(!is.na(region_name)) |&gt; \n  filter(!region_name %in% c(\"Global\")) |&gt; \n  # filter(year &gt; ymd(\"1994-01-01\")) |&gt; \n  ggplot(aes(x=year, y = NumericValue, color = region_name))+\n  geom_line(size = 1)+\n  labs(y = \"Value\",\n       x = \"Year\",\n       title = \"Maternal mortality ratio (per 100,000 live births)\",\n       color = \"\")+\n  # facet_wrap(.~region_name)+\n  theme_bw()+\n  theme(legend.position = \"bottom\")+\n  guides(color=guide_legend(nrow=2,byrow=TRUE))"
  }
]